// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

model User {
  id             String  @id @default(uuid())
  userName       String  @unique
  imageUrl       String  @db.Text
  externalUserid String  @unique
  bio            String? @db.Text

  followers Follow[] @relation("followedBy")

  following Follow[] @relation("following")

  blocking  Block[] @relation("Blocking")
  blockedBy Block[] @relation("BlockedBy")

  stream Stream?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Follow {
  id String @id @default(uuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  followerId  String
  followers   User?  @relation(name: "followedBy", fields: [followerId], references: [id], onDelete: Cascade)
  followingId String
  following   User?  @relation(name: "following", fields: [followingId], references: [id], onDelete: Cascade)

  @@unique([followerId, followingId])
}

model Block {
  id        String @id @default(uuid())
  blockerId String
  blockedid String

  blocker User @relation(name: "Blocking", fields: [blockerId], references: [id], onDelete: Cascade)
  blocked User @relation(name: "BlockedBy", fields: [blockedid], references: [id], onDelete: Cascade)

  @@unique([blockerId, blockedid])
}

model Stream {
  id           String  @id @default(uuid())
  name         String  @db.Text
  thumbnailUrl String? @db.Text

  ingressId String? @unique
  serverUrl String? @db.Text
  streamKey String? @db.Text

  isLive              Boolean @default(false)
  isChatEnabled       Boolean @default(true)
  isChatDelayed       Boolean @default(false)
  isChatFollowersOnly Boolean @default(false)

  User   User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String? @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([ingressId])
}
